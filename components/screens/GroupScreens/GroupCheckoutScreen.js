import React from 'react';
import {FlatList, Pressable, ScrollView, StyleSheet, Text, View} from 'react-native';
import {Colors} from '../../../styles/Colors';
import {FontSizes} from "../../../styles/FontSizes";
import {CheckoutItemCard} from "../../Cards/CheckoutItemCard";
import Svg, {Ellipse, Path} from 'react-native-svg';
import {IconButton} from "@react-native-material/core";
import {Feather} from "@expo/vector-icons";
import {FontFamily} from "../../../styles/FontFamily";

export const GroupCheckoutScreen = ({navigation, route}) => {
  // const checkedItems = route.params.checkedItems;
  // const {totalWeight} = route.params.weight;
  const {checkedItems, totalWeight, group} = route.params;

  const convertUtcToString = (utcDate) => {
    return new Date(utcDate).toLocaleDateString('en-US', options);
  };
  const options = {
    year: 'numeric',
    month: '2-digit',
    day: '2-digit',
  };

  const endDateString = convertUtcToString(group.shipEndDate);

  let rate = 0;
  if (group.shipRoute === 'Air Sensitive') {
    rate = 20;
  } else if (group.shipRoute === 'Air Standard') {
    rate = 15;
  } else if (group.shipRoute === 'Sea Sensitive') {
    rate = 10;
  } else if (group.shipRoute === 'Sea Standard') {
    rate = 5;
  } else {
    rate = 100;
  }

  return (
    <View style={styles.container}>


      <Text style={{
        marginTop: 70,
        fontSize: 20,
        marginBottom: 30,
        fontWeight: 'bold',
        fontFamily: FontFamily.bold
      }}>Checkout</Text>

      <View style={styles.backButtonView}>
        <IconButton
          icon={props => <Feather name="arrow-left" size={24} color="black"/>}
          onPress={() => navigation.goBack()}
          style={styles.icon}
        />
      </View>
      <ScrollView horizontal={false} style={{
        borderRadius: 10,
        marginHorizontal: 20,
        width: '90%'
      }}>
        <View style={styles.bottomContainer}>
          <View style={styles.itemContainer}>

            <View style={styles.infoLine}>
              <View style={styles.item}>
                <Svg width={24} height={24}>
                  <Path
                    fill="#80B213"
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M8.53162 2.93677C10.7165 1.66727 13.402 1.68946 15.5664 2.99489C17.7095 4.32691 19.012 6.70418 18.9998 9.26144C18.95 11.8019 17.5533 14.19 15.8075 16.0361C14.7998 17.1064 13.6726 18.0528 12.4488 18.856C12.3228 18.9289 12.1848 18.9777 12.0415 19C11.9036 18.9941 11.7693 18.9534 11.6508 18.8814C9.78243 17.6746 8.14334 16.134 6.81233 14.334C5.69859 12.8314 5.06584 11.016 5 9.13442C4.99856 6.57225 6.34677 4.20627 8.53162 2.93677ZM9.79417 10.1948C10.1617 11.1008 11.0292 11.6918 11.9916 11.6918C12.6221 11.6964 13.2282 11.4438 13.6748 10.9905C14.1214 10.5371 14.3715 9.92064 14.3693 9.27838C14.3726 8.29804 13.7955 7.41231 12.9073 7.03477C12.0191 6.65723 10.9951 6.86235 10.3133 7.55435C9.6316 8.24635 9.42665 9.28872 9.79417 10.1948Z"
                  />
                  <Ellipse cx={12} cy={21} rx={5} ry={1} fill="#80B213"/>
                </Svg>
              </View>
              <Text style={styles.shipTitle}>Shipping Information</Text>
            </View>

            <View style={styles.infoLine}>
              <View style={styles.item}>
                <Svg width='16' height='15' viewBox="0 0 16 15" fill="none">
                  <Path
                    d="M14.6871 6.94965C15.0817 6.58792 15.1146 5.96311 14.72 5.5685C14.5555 5.40408 14.3582 5.30542 14.128 5.27254L11.0369 4.81216C10.7081 4.77927 10.445 4.54908 10.2806 4.25312L8.89943 1.45795C8.66924 0.964683 8.07732 0.734492 7.58405 0.964683C7.38675 1.06334 7.18944 1.22776 7.09079 1.45795L5.70964 4.25312C5.5781 4.54908 5.28214 4.74639 4.9533 4.81216L1.86217 5.27254C1.33602 5.33831 0.941403 5.83157 1.00717 6.35772C1.04006 6.58792 1.13871 6.78522 1.30313 6.94965L3.53927 9.12002C3.76946 9.35021 3.86811 9.67905 3.83523 10.0079L3.37485 13.0661C3.2762 13.5923 3.60504 14.1184 4.16407 14.2171C4.39427 14.25 4.62446 14.2171 4.82176 14.1184L7.58405 12.6715C7.88001 12.5071 8.20886 12.5071 8.50482 12.6715L11.2671 14.1184C11.7275 14.3815 12.3523 14.2171 12.6154 13.7238C12.714 13.5265 12.7798 13.2963 12.714 13.0661L12.1879 10.0079C12.1221 9.67905 12.2536 9.35021 12.4838 9.12002L14.6871 6.94965Z"
                    stroke='#979797'
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </Svg>
              </View>
              <Text style={styles.infoText}>{group.shipRoute}</Text>
            </View>

            <View style={styles.infoLine}>
              <View style={styles.item}>
                <Svg width={15} height={15} viewBox="0 0 15 15">
                  <Path
                    fill="#979797"
                    d="M8.07579 2.30259V2.87839C8.06542 3.38905 7.23948 3.68011 6.97839 3.12219C6.94362 3.04556 6.92517 2.96253 6.92421 2.87839V2.30259H5.19741C4.75418 2.28127 4.45735 1.70202 4.76225 1.34986C4.86715 1.22882 4.95187 1.16311 5.19741 1.15101C5.77262 1.15101 6.34841 1.14928 6.92421 1.14582V0.575792C6.92269 0.514401 6.93245 0.453252 6.95303 0.395389C7.02911 0.164265 7.25677 0 7.51153 0C7.81873 0.0121037 8.06888 0.242075 8.07579 0.575792V1.1389C9.2268 1.13199 10.3784 1.12565 11.53 1.13141V0.575792C11.5357 0.268012 11.7605 0.0132565 12.0942 0H12.1167C12.4245 0.0121037 12.6746 0.242075 12.681 0.575792V1.14179L13.2994 1.15158C14.1818 1.17925 14.9669 1.93833 14.9836 2.85706C15.0055 6.32507 15.0055 9.79366 14.9836 13.2622C14.9674 14.1527 14.1968 14.9504 13.2781 14.9677C9.42622 14.9914 5.57378 14.9914 1.7219 14.9677C0.83487 14.951 0.0337176 14.196 0.0164265 13.2622C-0.0054755 9.79366 -0.0054755 6.32507 0.0164265 2.85706C0.0325648 1.96023 0.800865 1.15735 1.7415 1.15101H2.31902V0.575792C2.3172 0.514381 2.32698 0.453178 2.34784 0.395389C2.42392 0.164265 2.65158 0 2.90576 0C3.21354 0.0121037 3.46369 0.242075 3.47003 0.575792V2.87839C3.46023 3.38847 2.65793 3.67435 2.383 3.14294C2.34159 3.06086 2.3197 2.97032 2.31902 2.87839V2.30029C2.12228 2.29875 1.92554 2.29952 1.72882 2.30259C1.4366 2.31182 1.17666 2.56772 1.16744 2.86398C1.10317 6.32727 1.10317 9.79146 1.16744 13.2548C1.17666 13.5475 1.43256 13.8069 1.72882 13.8161C5.57594 13.8876 9.42406 13.8876 13.2712 13.8161C13.5634 13.8069 13.8233 13.551 13.8326 13.2548C13.8965 9.79193 13.8965 6.3268 13.8326 2.86398C13.8238 2.71517 13.7597 2.57501 13.6528 2.47111C13.546 2.36721 13.404 2.30709 13.255 2.30259H12.681V2.87839C12.6712 3.38386 11.8666 3.66916 11.5939 3.14294C11.5528 3.06076 11.5309 2.97028 11.53 2.87839V2.30259H8.07579ZM2.89424 11.5135C2.97142 11.5111 3.04831 11.5242 3.12034 11.552C3.19236 11.5799 3.25806 11.6219 3.31352 11.6757C3.36898 11.7294 3.41308 11.7937 3.4432 11.8649C3.47331 11.936 3.48883 12.0124 3.48883 12.0896C3.48883 12.1668 3.47331 12.2433 3.4432 12.3144C3.41308 12.3855 3.36898 12.4498 3.31352 12.5036C3.25806 12.5573 3.19236 12.5993 3.12034 12.6272C3.04831 12.6551 2.97142 12.6681 2.89424 12.6657C2.7446 12.661 2.60268 12.5982 2.49851 12.4907C2.39434 12.3832 2.33609 12.2393 2.33609 12.0896C2.33609 11.9399 2.39434 11.7961 2.49851 11.6886C2.60268 11.581 2.7446 11.5183 2.89424 11.5135ZM5.19741 11.5135C5.27519 11.5101 5.35286 11.5225 5.42572 11.55C5.49858 11.5774 5.56513 11.6193 5.62135 11.6732C5.67757 11.7271 5.72229 11.7918 5.75282 11.8634C5.78334 11.935 5.79904 12.0121 5.79896 12.0899C5.79888 12.1678 5.78303 12.2448 5.75236 12.3164C5.72169 12.388 5.67684 12.4526 5.62052 12.5063C5.56419 12.5601 5.49756 12.6019 5.42464 12.6292C5.35172 12.6565 5.27403 12.6687 5.19625 12.6651C5.04801 12.6583 4.90809 12.5946 4.80563 12.4873C4.70317 12.3799 4.64608 12.2372 4.64622 12.0888C4.64637 11.9404 4.70376 11.7978 4.80643 11.6906C4.9091 11.5835 5.04915 11.52 5.19741 11.5135ZM7.5 11.5135C7.64825 11.5202 7.78823 11.5837 7.8908 11.691C7.99336 11.7983 8.0506 11.9409 8.0506 12.0893C8.0506 12.2377 7.99336 12.3804 7.8908 12.4877C7.78823 12.5949 7.64825 12.6585 7.5 12.6651C7.35175 12.6585 7.21177 12.5949 7.1092 12.4877C7.00664 12.3804 6.9494 12.2377 6.9494 12.0893C6.9494 11.9409 7.00664 11.7983 7.1092 11.691C7.21177 11.5837 7.35175 11.5202 7.5 11.5135ZM2.89424 9.21095C2.97134 9.20851 3.04816 9.22159 3.12011 9.24941C3.19207 9.27724 3.2577 9.31924 3.31311 9.37292C3.36851 9.4266 3.41257 9.49087 3.44265 9.56191C3.47274 9.63295 3.48824 9.70931 3.48824 9.78645C3.48824 9.8636 3.47274 9.93996 3.44265 10.011C3.41257 10.082 3.36851 10.1463 3.31311 10.2C3.2577 10.2537 3.19207 10.2957 3.12011 10.3235C3.04816 10.3513 2.97134 10.3644 2.89424 10.362C2.74476 10.3572 2.60298 10.2945 2.49891 10.1871C2.39485 10.0797 2.33666 9.93601 2.33666 9.78645C2.33666 9.6369 2.39485 9.49321 2.49891 9.3858C2.60298 9.27839 2.74476 9.21568 2.89424 9.21095ZM5.19741 9.21095C5.35004 9.21095 5.49642 9.27158 5.60435 9.37951C5.71228 9.48744 5.77291 9.63382 5.77291 9.78645C5.77291 9.93909 5.71228 10.0855 5.60435 10.1934C5.49642 10.3013 5.35004 10.362 5.19741 10.362C5.04477 10.362 4.89839 10.3013 4.79046 10.1934C4.68254 10.0855 4.6219 9.93909 4.6219 9.78645C4.6219 9.63382 4.68254 9.48744 4.79046 9.37951C4.89839 9.27158 5.04477 9.21095 5.19741 9.21095ZM7.5 9.21095C7.57719 9.20851 7.65407 9.2216 7.7261 9.24945C7.79813 9.27731 7.86382 9.31935 7.91928 9.37308C7.97475 9.42682 8.01884 9.49115 8.04896 9.56226C8.07907 9.63337 8.09459 9.70981 8.09459 9.78703C8.09459 9.86425 8.07907 9.94069 8.04896 10.0118C8.01884 10.0829 7.97475 10.1472 7.91928 10.201C7.86382 10.2547 7.79813 10.2968 7.7261 10.3246C7.65407 10.3525 7.57719 10.3656 7.5 10.3631C7.35037 10.3584 7.20845 10.2956 7.10428 10.1881C7.0001 10.0806 6.94185 9.93674 6.94185 9.78703C6.94185 9.63732 7.0001 9.49349 7.10428 9.38597C7.20845 9.27845 7.35037 9.21568 7.5 9.21095ZM9.80259 9.21095C9.87978 9.20851 9.95667 9.2216 10.0287 9.24945C10.1007 9.27731 10.1664 9.31935 10.2219 9.37308C10.2773 9.42682 10.3214 9.49115 10.3516 9.56226C10.3817 9.63337 10.3972 9.70981 10.3972 9.78703C10.3972 9.86425 10.3817 9.94069 10.3516 10.0118C10.3214 10.0829 10.2773 10.1472 10.2219 10.201C10.1664 10.2547 10.1007 10.2968 10.0287 10.3246C9.95667 10.3525 9.87978 10.3656 9.80259 10.3631C9.65296 10.3584 9.51104 10.2956 9.40687 10.1881C9.3027 10.0806 9.24445 9.93674 9.24445 9.78703C9.24445 9.63732 9.3027 9.49349 9.40687 9.38597C9.51104 9.27845 9.65296 9.21568 9.80259 9.21095ZM12.1052 9.21095C12.1823 9.20851 12.2591 9.22159 12.3311 9.24941C12.403 9.27724 12.4686 9.31924 12.5241 9.37292C12.5795 9.4266 12.6235 9.49087 12.6536 9.56191C12.6837 9.63295 12.6992 9.70931 12.6992 9.78645C12.6992 9.8636 12.6837 9.93996 12.6536 10.011C12.6235 10.082 12.5795 10.1463 12.5241 10.2C12.4686 10.2537 12.403 10.2957 12.3311 10.3235C12.2591 10.3513 12.1823 10.3644 12.1052 10.362C11.9557 10.3572 11.8139 10.2945 11.7099 10.1871C11.6058 10.0797 11.5476 9.93601 11.5476 9.78645C11.5476 9.6369 11.6058 9.49321 11.7099 9.3858C11.8139 9.27839 11.9557 9.21568 12.1052 9.21095ZM5.19741 6.90836C5.27294 6.90836 5.34774 6.92324 5.41753 6.95214C5.48732 6.98105 5.55073 7.02342 5.60415 7.07683C5.65756 7.13025 5.69993 7.19366 5.72884 7.26345C5.75774 7.33324 5.77262 7.40803 5.77262 7.48357C5.77262 7.55911 5.75774 7.63391 5.72884 7.7037C5.69993 7.77349 5.65756 7.8369 5.60415 7.89031C5.55073 7.94373 5.48732 7.9861 5.41753 8.015C5.34774 8.04391 5.27294 8.05879 5.19741 8.05879C5.04485 8.05879 4.89854 7.99819 4.79067 7.89031C4.68279 7.78244 4.62219 7.63613 4.62219 7.48357C4.62219 7.33102 4.68279 7.18471 4.79067 7.07683C4.89854 6.96896 5.04485 6.90836 5.19741 6.90836ZM7.5 6.90836C7.57778 6.90488 7.65546 6.91719 7.72835 6.94456C7.80125 6.97192 7.86784 7.01377 7.92411 7.06758C7.98038 7.12139 8.02517 7.18605 8.05576 7.25764C8.08636 7.32924 8.10214 7.40629 8.10214 7.48415C8.10214 7.56201 8.08636 7.63906 8.05576 7.71066C8.02517 7.78225 7.98038 7.8469 7.92411 7.90071C7.86784 7.95452 7.80125 7.99638 7.72835 8.02374C7.65546 8.05111 7.57778 8.06342 7.5 8.05994C7.35175 8.05331 7.21177 7.98974 7.1092 7.88249C7.00664 7.77523 6.9494 7.63255 6.9494 7.48415C6.9494 7.33575 7.00664 7.19307 7.1092 7.08581C7.21177 6.97855 7.35175 6.91499 7.5 6.90836ZM9.80259 6.90836C9.88038 6.90488 9.95806 6.91719 10.0309 6.94456C10.1038 6.97192 10.1704 7.01377 10.2267 7.06758C10.283 7.12139 10.3278 7.18605 10.3584 7.25764C10.389 7.32924 10.4047 7.40629 10.4047 7.48415C10.4047 7.56201 10.389 7.63906 10.3584 7.71066C10.3278 7.78225 10.283 7.8469 10.2267 7.90071C10.1704 7.95452 10.1038 7.99638 10.0309 8.02374C9.95806 8.05111 9.88038 8.06342 9.80259 8.05994C9.65434 8.05331 9.51436 7.98974 9.4118 7.88249C9.30923 7.77523 9.25199 7.63255 9.25199 7.48415C9.25199 7.33575 9.30923 7.19307 9.4118 7.08581C9.51436 6.97855 9.65434 6.91499 9.80259 6.90836ZM12.1052 6.90836C12.2578 6.90828 12.4042 6.96884 12.5122 7.07671C12.6202 7.18459 12.6809 7.33094 12.681 7.48357C12.6811 7.63621 12.6205 7.78262 12.5126 7.8906C12.4047 7.99858 12.2584 8.05929 12.1058 8.05937C12.0302 8.0594 11.9553 8.04455 11.8855 8.01567C11.8157 7.98678 11.7522 7.94442 11.6987 7.89101C11.6453 7.83759 11.6028 7.77417 11.5739 7.70436C11.5449 7.63455 11.53 7.55973 11.53 7.48415C11.5299 7.40857 11.5448 7.33373 11.5737 7.26389C11.6026 7.19405 11.6449 7.13059 11.6983 7.07712C11.7517 7.02365 11.8152 6.98123 11.885 6.95227C11.9548 6.92332 12.0296 6.90839 12.1052 6.90836Z"
                  />
                </Svg>
              </View>
              <Text style={styles.infoText}>{endDateString}</Text>
            </View>

            <View style={styles.infoLine}>
              <View style={styles.item}>
                <Svg width={16} height={16} viewBox="0 0 16 16">
                  <Path
                    d="M6.10483 13.8475V11.803C6.10482 11.283 6.52877 10.8605 7.05403 10.857H8.97808C9.50585 10.857 9.93369 11.2805 9.93369 11.803V11.803V13.8539C9.93357 14.2954 10.2895 14.6562 10.7354 14.6666H12.0181C13.2968 14.6666 14.3334 13.6404 14.3334 12.3745V12.3745V6.55848C14.3265 6.06047 14.0903 5.59282 13.692 5.28861L9.30517 1.79012C8.53664 1.18096 7.44416 1.18096 6.67563 1.79012L2.30804 5.29496C1.90819 5.59793 1.67161 6.06636 1.66669 6.56482V12.3745C1.66669 13.6404 2.70327 14.6666 3.98196 14.6666H5.26466C5.72159 14.6666 6.092 14.2999 6.092 13.8475V13.8475"
                    stroke="#979797"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </Svg>
              </View>
              <Text style={styles.infoText}>{group.pickupLocation.address}</Text>
            </View>

          </View>
        </View>

        <View style={{height: 12}}/>
        {/*Item card*/}
        <View style={styles.bottomContainer}>
          <View style={styles.deliveryBar}>
            {/*<Feather name="package" size={24} color={Colors.statusOrange} />*/}
            <Svg width={20} height={20} viewBox="0 0 17 17" fill="none">
              <Path
                d="M12.0417 4.60421L11.6875 6.37504L3.1875 5.31254V3.18754L3.89583 2.83337H11.6875L12.0417 3.18754V4.60421Z"
                fill="white"
              />
              <Path
                d="M2.83334 4.95837V8.50004V13.4584L3.89584 14.1667H12.75L13.4583 13.8125V6.37504L13.1042 5.66671H12.3958H4.25L2.83334 4.95837Z"
                fill={Colors.buttonDarkGreen}
              />
              <Path
                d="M12.0417 5.66671V3.54171C12.0417 3.35385 11.967 3.17368 11.8342 3.04084C11.7014 2.908 11.5212 2.83337 11.3333 2.83337H4.25C3.87428 2.83337 3.51394 2.98263 3.24827 3.24831C2.98259 3.51398 2.83334 3.87432 2.83334 4.25004M2.83334 4.25004C2.83334 4.62576 2.98259 4.9861 3.24827 5.25178C3.51394 5.51745 3.87428 5.66671 4.25 5.66671H12.75C12.9379 5.66671 13.118 5.74134 13.2509 5.87417C13.3837 6.00701 13.4583 6.18718 13.4583 6.37504V13.4584C13.4583 13.6462 13.3837 13.8264 13.2509 13.9592C13.118 14.0921 12.9379 14.1667 12.75 14.1667H8.5H4.25C3.87428 14.1667 3.51394 14.0175 3.24827 13.7518C2.98259 13.4861 2.83334 13.1258 2.83334 12.75V4.25004Z"
                stroke={Colors.buttonDarkGreen}
                strokeWidth={1.5}
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <Path
                d="M14.1667 8.5V11.3333H11.3333C10.9576 11.3333 10.5973 11.1841 10.3316 10.9184C10.0659 10.6527 9.91666 10.2924 9.91666 9.91667C9.91666 9.54094 10.0659 9.18061 10.3316 8.91493C10.5973 8.64926 10.9576 8.5 11.3333 8.5H14.1667Z"
                fill="white" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </Svg>
            <Text style={styles.itemTextTitle}>Items</Text>
          </View>

          {/*<FlatList*/}
          {/*  data={checkedItems}*/}
          {/*  style={{*/}
          {/*    // width: '100%',*/}
          {/*    // paddingRight: 15,*/}
          {/*  }}*/}
          {/*  renderItem={*/}
          {/*    ({item}) =>*/}
          {/*      <CheckoutItemCard item={item}/>}*/}
          {/*/>*/}
          {checkedItems!==null && checkedItems.length>0 && checkedItems.map((item) =>
              <CheckoutItemCard key={item.id} item={item} />
            )}
        </View>

        <View style={{height: 12}}/>
      </ScrollView>


      <View style={{height: 30, position: 'absolute', bottom: 0,}}/>
      <View>
        <View style={{height: 12}}/>
        {/*Calculate*/}
        <View style={styles.calculateContainer}>
          <View style={styles.itemContainer}>
            {/*route rate*/}
            <View style={[styles.infoLine, {
              justifyContent: 'space-between',
              marginRight: 15,
            }]}>
              <Text style={styles.calculateText}>Route Rate</Text>
              <Text style={styles.calculateNumber}>${rate}/kg</Text>
            </View>

            {/*weight*/}
            <View style={[styles.infoLine, {
              justifyContent: 'space-between',
              marginRight: 15,
            }]}>
              <Text style={styles.calculateText}>Weight</Text>
              <Text style={styles.calculateNumber}>{totalWeight} kg</Text>
            </View>

            {/*break line*/}
            <View style={styles.breakLine}/>

            {/*total line*/}
            <View style={[styles.infoLine, {
              justifyContent: 'space-between',
              marginRight: 15,
            }]}>
              <Text style={styles.totalText}>Total</Text>
              <Text style={styles.totalNumber}>${rate * parseFloat(totalWeight)}</Text>
            </View>
          </View>
        </View>

        {/*button*/}
        <Pressable style={styles.getStartedButton}
                   onPress={() => navigation.navigate("Payment", {group, checkedItems})}>
          <Text style={styles.getStartedText}>Place Order</Text>
        </Pressable>
      </View>
    </View>
  )
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
  },
  bottomContainer: {
    backgroundColor: Colors.white,
    borderRadius: 10,
  },
  itemContainer: {
    marginLeft: 10,
    marginTop: 20,
    marginBottom: 12,
  },
  infoLine: {
    flexDirection: 'row',
    marginBottom: 8,

  },
  item: {
    alignItems: 'center',
    width: 40,
  },
  shipTitle: {
    fontWeight: 'bold',
    marginTop: 0,
    fontSize: 17,
    fontFamily: FontFamily.bold,
  },
  infoText: {
    color: Colors.textGray,
    width: '80%',
    fontFamily: FontFamily.regular,
  },
  calculateContainer: {
    marginHorizontal: 20,
    backgroundColor: Colors.white,
    borderRadius: 10,
    zIndex: 1,
    marginBottom: 15,
  },
  getStartedButton: {
    height: 60,
    marginHorizontal: 20,
    marginBottom: 40,
    backgroundColor: Colors.buttonDarkGreen,
    borderRadius: 16,
    alignItems: 'center',
    justifyContent: 'center',
  },
  getStartedText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: Colors.white,
    fontFamily: FontFamily.bold,
  },
  calculateText: {
    width: '80%',
    marginLeft: 10,
    color: Colors.textGray,
    fontFamily: FontFamily.regular,
  },
  calculateNumber: {
    color: Colors.textGray,
    fontFamily: FontFamily.regular,
  },
  breakLine: {
    height: 1,
    backgroundColor: Colors.backgroundGray,
    marginTop: 10,
    marginBottom: 10,
    width: '90%',
    alignSelf: 'center'
  },
  totalText: {
    fontWeight: 'bold',
    marginLeft: 10,
    fontSize: FontSizes.calculateText,
    width: '70%',
    fontFamily: FontFamily.bold,
  },
  totalNumber: {
    fontWeight: 'bold',
    // marginLeft: 25,
    fontSize: FontSizes.calculateText,
    fontFamily: FontFamily.bold,
  },
  deliveryBar: {
    flexDirection: 'row',
    marginTop: 20,
    marginLeft: 20,
    marginBottom: 5
  },
  itemTextTitle: {
    fontWeight: 'bold',
    marginTop: -1,
    marginLeft: 10,
    alignItems: 'center',
    fontSize: 17,
    fontFamily: FontFamily.bold,
  },
  backButtonView: {
    position: 'absolute',
    width: 36,
    height: 36,
    left: 20,
    top: 67,
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
  },
  icon: {
    position: 'absolute',
    left: '-16%',
    top: '-16%',
  },
})